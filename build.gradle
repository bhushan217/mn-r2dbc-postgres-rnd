plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.1"
    id("io.micronaut.test-resources") version "4.2.1"
    id("com.google.cloud.tools.jib") version "2.8.0"
    id("io.micronaut.aot") version "4.2.1"
}

version = "0.1"
group = "com.rukbal.db"

repositories {
    mavenCentral()
}

dependencies {
    runtimeOnly("org.yaml:snakeyaml")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation "io.micronaut.security:micronaut-security"
    runtimeOnly "io.micronaut.security:micronaut-security-jwt"
    compileOnly("io.micronaut:micronaut-http-client")
    compileOnly("io.micronaut.openapi:micronaut-openapi-annotations")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.problem:micronaut-problem-json")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-discovery-client")

    // DATABASE
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-r2dbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("org.postgresql:postgresql")
    runtimeOnly("org.postgresql:r2dbc-postgresql")
//    implementation("io.micronaut.flyway:micronaut-flyway")

    // TEST LIB
    testRuntimeOnly("com.h2database:h2")
    testRuntimeOnly("io.r2dbc:r2dbc-h2")
    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass.set("com.rukbal.db.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


tasks {
    jib {
        to {
            image = "gcr.io/myapp/jib-image"
        }
    }
    dockerBuild {
        images = ["bhushan217/mn-r2dbc-ui-config-service:$project.version"]
    }
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.rukbal.db.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}
//tasks.named("dockerBuild") {
//    images = ["bhushan217/mn-r2dbc-ui-config-service:$project.version"]
//}
run {
    systemProperties([
            'micronaut.environments': 'dev'
    ])
}


