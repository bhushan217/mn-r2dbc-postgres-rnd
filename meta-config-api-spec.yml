openapi: 3.0.1
paths:
  /api/objectKeys:
    put:
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectKeyVO'
        required: true
      responses:
        "200":
          description: update 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectKeyVO'
    post:
      tags:
      - save ObjectKey
      operationId: save
      requestBody:
        description: The objectKeyVO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectKeyVO'
        required: true
      responses:
        "400":
          description: Invalid ObjectKey Supplied
        "404":
          description: ObjectKey not found
        "200":
          description: OK response
          content:
            application/json:
              schema:
                type: ObjectKeyVO
                allOf: []
                anyOf: []
                oneOf: []
    delete:
      operationId: deleteAll
      responses:
        "200":
          description: deleteAll 200 response
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /api/objectKeys/list:
    get:
      tags:
      - list ObjectKey
      operationId: listPage
      parameters:
      - name: pageable
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Pageable'
      responses:
        "400":
          description: Invalid ObjectKey Supplied
        "404":
          description: ObjectKey not found
        "200":
          description: OK response
          content:
            application/json:
              schema:
                type: ObjectKeyVO
                allOf: []
                anyOf: []
                oneOf: []
  /api/objectKeys/{id}:
    get:
      operationId: show
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: show 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectKeyVO'
    delete:
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: delete 200 response
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /api/uiTypes:
    get:
      operationId: all
      responses:
        "200":
          description: all 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UiType'
    post:
      operationId: save_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UiTypeVO'
        required: true
      responses:
        "200":
          description: save_1 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiTypeVO'
    delete:
      operationId: deleteAll_1
      responses:
        "200":
          description: deleteAll_1 200 response
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /api/uiTypes/list:
    get:
      operationId: listPage_1
      parameters:
      - name: pageable
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: listPage_1 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_UiTypeVO_'
  /api/uiTypes/{id}:
    get:
      operationId: show_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: show_1 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiTypeVO'
    delete:
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: delete_1 200 response
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /api/uiTypes/{name}:
    get:
      operationId: byName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: byName 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiTypeVO'
  /basePath:
    delete:
      operationId: deleteAll_2
      responses:
        "200":
          description: deleteAll_2 200 response
          content:
            application/json:
              schema:
                type: object
  /basePath/list:
    get:
      operationId: listPage_2
      parameters:
      - name: pageable
        in: query
        schema:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: listPage_2 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_BaseRecord_Object__'
  /basePath/{id}:
    get:
      operationId: show_2
      parameters:
      - name: id
        in: path
        required: true
        schema: {}
      responses:
        "200":
          description: show_2 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseRecord_Object_'
    delete:
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema: {}
      responses:
        "200":
          description: delete_2 200 response
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    BaseRecord_Object_:
      type: object
    ObjectKey:
      required:
      - description
      - keyName
      - label
      - uiType
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        keyName:
          maxLength: 63
          minLength: 1
          type: string
        label:
          maxLength: 127
          minLength: 1
          type: string
        description:
          maxLength: 255
          type: string
        uiType:
          $ref: '#/components/schemas/UiType'
    ObjectKeyVO:
      required:
      - description
      - keyName
      - label
      - uiTypeId
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        keyName:
          maxLength: 63
          minLength: 1
          type: string
        label:
          maxLength: 127
          minLength: 1
          type: string
        description:
          maxLength: 255
          type: string
        uiTypeId:
          type: integer
          format: int32
    Page_BaseRecord_Object__:
      type: object
      allOf:
      - $ref: '#/components/schemas/Slice_BaseRecord_Object__'
      - required:
        - totalSize
        properties:
          totalSize:
            type: integer
            format: int64
          totalPages:
            type: integer
            format: int32
    Page_UiTypeVO_:
      type: object
      allOf:
      - $ref: '#/components/schemas/Slice_UiTypeVO_'
      - required:
        - totalSize
        properties:
          totalSize:
            type: integer
            format: int64
          totalPages:
            type: integer
            format: int32
    Pageable:
      type: object
      allOf:
      - $ref: '#/components/schemas/Sort'
      - required:
        - size
        - sort
        properties:
          number:
            type: integer
            format: int32
          size:
            type: integer
            format: int32
          sort:
            $ref: '#/components/schemas/Sort'
    Slice_BaseRecord_Object__:
      required:
      - content
      - pageable
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/BaseRecord_Object_'
        pageable:
          $ref: '#/components/schemas/Pageable'
        pageNumber:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        empty:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
    Slice_UiTypeVO_:
      required:
      - content
      - pageable
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UiTypeVO'
        pageable:
          $ref: '#/components/schemas/Pageable'
        pageNumber:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        empty:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
    Sort:
      required:
      - orderBy
      type: object
      properties:
        orderBy:
          type: array
          items:
            $ref: '#/components/schemas/Sort.Order'
    Sort.Order:
      required:
      - direction
      - ignoreCase
      - property
      type: object
      properties:
        ignoreCase:
          type: boolean
        direction:
          $ref: '#/components/schemas/Sort.Order.Direction'
        property:
          type: string
        ascending:
          type: boolean
    Sort.Order.Direction:
      type: string
      enum:
      - ASC
      - DESC
    UiType:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        name:
          minLength: 31
          type: string
        description:
          maxLength: 255
          type: string
          nullable: true
        pattern:
          maxLength: 63
          type: string
          nullable: true
        objectKeys:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ObjectKey'
    UiTypeVO:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 15
          minLength: 3
          type: string
        description:
          maxLength: 255
          type: string
          nullable: true
        pattern:
          maxLength: 63
          type: string
          nullable: true
